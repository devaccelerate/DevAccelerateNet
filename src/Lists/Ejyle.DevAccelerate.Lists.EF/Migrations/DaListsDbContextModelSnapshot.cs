// <auto-generated />
using System;
using Ejyle.DevAccelerate.Lists.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ejyle.DevAccelerate.Lists.EF.Migrations
{
    [DbContext(typeof(DaListsDbContext))]
    partial class DaListsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultDateFormatId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultSystemLanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultTimeZoneId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("InternationalDialingCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("NumericCode")
                        .HasColumnType("int");

                    b.Property<string>("ThreeLetterCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("TwoLetterCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ThreeLetterCode")
                        .IsUnique();

                    b.HasIndex("TwoLetterCode")
                        .IsUnique();

                    b.ToTable("Countries", "Lists");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCountryDateFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("DateFormatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("DateFormatId");

                    b.ToTable("CountryDateFormats", "Lists");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCountryRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ParentId");

                    b.ToTable("CountryRegions", "Lists");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCountrySystemLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("SystemLanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("SystemLanguageId");

                    b.ToTable("CountrySystemLanguages", "Lists");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCountryTimeZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("TimeZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("TimeZoneId");

                    b.ToTable("CountryTimeZones", "Lists");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlphabeticCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencySymbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("NumericCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlphabeticCode")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Currencies", "Lists");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaDateFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DateFormatExpression")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("DateFormatExpression")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DateFormats", "Lists");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaSystemLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SystemLanguages", "Lists");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaTimeZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DaylightName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("SupportsDaylightSavingTime")
                        .HasColumnType("bit");

                    b.Property<string>("SystemTimeZoneId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TimeZones", "Lists");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Generic.DaGenericList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("GenericLists", "Lists");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Generic.DaGenericListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.ToTable("GenericListItems", "Lists");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCountry", b =>
                {
                    b.HasOne("Ejyle.DevAccelerate.Lists.Culture.DaCurrency", "Currency")
                        .WithMany("Countries")
                        .HasForeignKey("CurrencyId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCountryDateFormat", b =>
                {
                    b.HasOne("Ejyle.DevAccelerate.Lists.Culture.DaCountry", "Country")
                        .WithMany("CountryDateFormats")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ejyle.DevAccelerate.Lists.Culture.DaDateFormat", "DateFormat")
                        .WithMany("CountryDateFormats")
                        .HasForeignKey("DateFormatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("DateFormat");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCountryRegion", b =>
                {
                    b.HasOne("Ejyle.DevAccelerate.Lists.Culture.DaCountry", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ejyle.DevAccelerate.Lists.Culture.DaCountryRegion", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Country");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCountrySystemLanguage", b =>
                {
                    b.HasOne("Ejyle.DevAccelerate.Lists.Culture.DaCountry", "Country")
                        .WithMany("CountrySystemLanguages")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ejyle.DevAccelerate.Lists.Culture.DaSystemLanguage", "SystemLanguage")
                        .WithMany("CountrySystemLanguages")
                        .HasForeignKey("SystemLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("SystemLanguage");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCountryTimeZone", b =>
                {
                    b.HasOne("Ejyle.DevAccelerate.Lists.Culture.DaCountry", "Country")
                        .WithMany("CountryTimeZones")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ejyle.DevAccelerate.Lists.Culture.DaTimeZone", "TimeZone")
                        .WithMany("CountryTimeZones")
                        .HasForeignKey("TimeZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("TimeZone");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Generic.DaGenericListItem", b =>
                {
                    b.HasOne("Ejyle.DevAccelerate.Lists.Generic.DaGenericList", "List")
                        .WithMany("ListItems")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("List");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCountry", b =>
                {
                    b.Navigation("CountryDateFormats");

                    b.Navigation("CountrySystemLanguages");

                    b.Navigation("CountryTimeZones");

                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCountryRegion", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaCurrency", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaDateFormat", b =>
                {
                    b.Navigation("CountryDateFormats");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaSystemLanguage", b =>
                {
                    b.Navigation("CountrySystemLanguages");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Culture.DaTimeZone", b =>
                {
                    b.Navigation("CountryTimeZones");
                });

            modelBuilder.Entity("Ejyle.DevAccelerate.Lists.Generic.DaGenericList", b =>
                {
                    b.Navigation("ListItems");
                });
#pragma warning restore 612, 618
        }
    }
}
